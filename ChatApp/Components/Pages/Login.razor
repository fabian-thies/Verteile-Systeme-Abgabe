@page "/login"
@using ChatApp.Models
@using Microsoft.AspNetCore.Identity
@inject NavigationManager Navigation
@inject SignInManager<ApplicationUser> SignInManager
@rendermode InteractiveServer

<div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
        <h2 class="text-2xl/9 mt-10 text-center font-bold tracking-tight text-white">Sign in to your account</h2>
    </div>

    <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator/>
            <ValidationSummary/>

            <div>
                <label for="email" class="text-sm/6 block font-medium text-white">Email address</label>
                <div class="mt-2">
                    <InputText id="email" type="email"
                               class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900"
                               @bind-Value="loginModel.Email"/>
                </div>
            </div>

            <div>
                <label for="password" class="text-sm/6 mt-6 block font-medium text-white">Password</label>
                <div class="mt-2">
                    <InputText id="password" type="password"
                               class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900"
                               @bind-Value="loginModel.Password"/>
                </div>
            </div>

            <div>
                <button type="submit"
                        class="text-sm/6 mt-10 shadow-xs flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 font-semibold text-white hover:bg-indigo-500">
                    Sign in
                </button>
            </div>
        </EditForm>

        <p class="text-sm/6 mt-10 text-center text-gray-500">
            <a href="/register" class="font-semibold">Register</a>
        </p>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        var result = await SignInManager.PasswordSignInAsync(loginModel.Email, loginModel.Password, false, false);

        if (result.Succeeded)
        {
            Navigation.NavigateTo("/");
        }
    }

    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

}